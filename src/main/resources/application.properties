spring.application.name=resortbooking-otp-app
server.port=9091

spring.datasource.url=jdbc:postgresql://localhost:5432/resortbooking
spring.datasource.username=postgres
spring.datasource.password=Rahul
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

jwt.secret=zaruree_secret_keyzaruree_secret_key

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=rahulpatilpatil2001@gmail.com
spring.mail.password=blmtsauqaufgzrju
spring.mail.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

# 2Factor API configuration
twofactor.api.key=34df5e4b-6706-11f0-a562-0200cd936042
twofactor.otp.template=Zarure
twofactor.api.url=https://2factor.in/API/V1/



# Google OAuth2 Client Config
spring.security.oauth2.client.registration.google.client-id=1047988820481-j2uhbe1if3ia5u8dvefp04i364h5h8m2.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.client-name=Google

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

